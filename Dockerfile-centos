# https://wiki.centos.org/FAQ/CentOSStream
# https://quay.io/repository/centos/centos?tab=tags
FROM quay.io/centos/centos:stream8 as everything

# putting && on next line, because then it's more obvious that the new line is a separate command

ENV SHELL=/bin/bash \
	LANG=en_US.utf8 \
	DNF=/usr/bin/dnf \
	DELTA_RPM_DISABLE="--setopt=deltarpm=false" \
	NO_DOCS="--nodocs" \
	UPGRADE_CMD="upgrade"

EXPOSE 80

# minrate defaults to 1k/s, which means a slow mirror can slow the build to a near-stop
# fastestmirror is something we're trying out. The docs say
# "a metric is used to find the fastest available mirror" but
# it's not clear what the pro/con are.
# docs: https://dnf.readthedocs.io/en/latest/conf_ref.html
RUN echo "minrate=100k" >> /etc/dnf/dnf.conf \
	&& echo "fastestmirror=True" >> /etc/dnf/dnf.conf

# install yarn repo
RUN printf "\
[yarn]\n\
name=Yarn Repository\n\
baseurl=https://dl.yarnpkg.com/rpm/\n\
enabled=1\n\
gpgcheck=1\n\
gpgkey=https://dl.yarnpkg.com/rpm/pubkey.gpg\n\
" > /etc/yum.repos.d/yarn.repo

# because I use ll all the time
COPY ./home/.bashrc /root/

WORKDIR /var/www/laravel

ENTRYPOINT ["/usr/share/docker-laravel-scripts/start.sh"]


# SSLProxyEngine requires mod_ssl to connect to a https endpoint

# unzip is used to speed up composer

# findutils provides find and xargs, used by start.sh.

# gcc-c++ and make are for building native node addons => install these on a per-project basis

# we create /run/php-fpm because php-fpm is supposed to but isn't

# the touch is per https://bugzilla.redhat.com/show_bug.cgi?id=1213602
# it's needed for every dnf operation when the host is using overlayfs (like macs and GCR)
RUN touch /var/lib/rpm/* \
	&& ${DNF} -y ${UPGRADE_CMD} ${DELTA_RPM_DISABLE} ${NO_DOCS} \
	&& ${DNF} -y install \
		'dnf-command(config-manager)' \
		https://rpms.remirepo.net/enterprise/remi-release-9.rpm \
		https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm \
	&& ${DNF} -y module install php:remi-8.1 \
	&& ${DNF} -y install ${NO_DOCS} \
		findutils \
		git \
		hostname \
		htop \
		httpd \
		ImageMagick \
		mod_ssl \
		nodejs \
		php \
		php-fpm \
		php-gd \
		php-imap \
		php-intl \
		php-json \
		php-lz4 \
		php-maxminddb \
		php-mbstring \
		php-mysqlnd \
		php-opcache \
		php-pdo \
		php-pecl-apcu \
		php-pecl-imagick \
		php-pecl-memcached \
		php-pgsql \
		php-redis \
		php-soap \
		php-sodium \
		php-xml \
		php-zip \
		supervisor \
		unzip \
		vim \
		yarn \
		zip \
	&& ${DNF} clean all \
	&& mkdir /run/php-fpm

# example of how you could switch php versions in a project extending this image:

## downgrade from php 8.0 to 7.4
## get the list of currently installed php8 packages,
##   it also strips out the "4" in php-lz4, so we add that back manually
## use sed to strip out the verison numbers,
## switch to the php 7.4 stream,
## then reinstall the php packages
## /run/php-fpm is removed when uninstalling php-fpm, and isn't added back when installing it
#RUN dnf module repoquery --quiet --installed php:remi-8.0 | sed -r 's/^([^0-9]*).*/\1/' | sed -r 's/-$//' | grep -v php-lz > old-php.txt \
#	&& echo "php-lz4" >> old-php.txt \
#	&& cat old-php.txt \
#	&& cat old-php.txt | xargs dnf remove -y \
#	&& dnf -y module disable glpi \
#	&& dnf -y module disable composer \
#	&& dnf -y module disable php:remi-8.0 \
#	&& dnf -y module enable php:remi-7.4 \
#	&& cat old-php.txt | xargs dnf install -y \
#	&& mkdir -p /run/php-fpm \
#	&& rm old-php.txt


# centos-8 didn't originally have a supervisor package. It does now. This is how you'd install it if it didn't:
# Env var SUPERVISORD_BIN=/usr/local/bin/supervisord
# http://supervisord.org/installing.html recommends pip
#RUN pip3 install supervisor

# centos8 doesn't have composer yet
# per https://tecadmin.net/install-php-composer-on-centos/
RUN curl -sS https://getcomposer.org/installer | php \
	&& mv /var/www/laravel/composer.phar /usr/local/bin/composer

# Configure php
COPY etc/php.d/php.ini /etc/php.d/local-overrides.ini
COPY etc/php-fpm.d/php-fpm.ini /etc/php-fpm.d/www.conf

# configure apache
COPY etc/httpd/conf.d/* /etc/httpd/conf.d/

# supervisord
COPY etc/supervisord.conf /etc/supervisord.conf
COPY etc/supervisord.d/* /etc/supervisord.d/

# Default ENV
# order is OS env => Dockerfile-fedora => .env
# ------------------
ENV LARAVEL_WWW_PATH=/var/www/laravel \
	LARAVEL_RUN_PATH=/var/run/laravel \
	LARAVEL_STORAGE_PATH=/var/run/laravel/storage \
	LARAVEL_BOOTSTRAP_CACHE_PATH=/var/run/laravel/bootstrap/cache \
	REFLEXIONS_SCRIPTS_PATH=/usr/share/docker-laravel-scripts \
	SUPERVISORD_BIN=/usr/bin/supervisord

# start and setup scripts
COPY docker-laravel-scripts/* ${REFLEXIONS_SCRIPTS_PATH}/

# so that the volumes are writeable by apache
RUN mkdir /usr/share/httpd/{.cache,.composer,.yarn} \
	&& chown apache:apache /usr/share/httpd/{.cache,.composer,.yarn}

VOLUME [ \
	"/usr/share/httpd/.cache", \
	"/usr/share/httpd/.composer", \
	"/usr/share/httpd/.yarn" \
# We won't make these volumes now, but the extending Dockerfile-fedora may want to do this if
# baking those dirs into the image is undesirable.
#	"/var/www/laravel", \
#	"/var/run/laravel/storage"
]

FROM everything
